/* --------------------------------------------------------------------------------
 #
 #	4DPlugin.h
 #	source generated by 4D Plugin Wizard
 #	Project : Serial
 #	author : miyako
 #	2017/11/10
 #
 # --------------------------------------------------------------------------------*/

#import "ORSSerialPort.h"
#import "ORSSerialPortManager.h"
#import "libjson.h"

void SERIAL_GET_AVAILABLE_PORTS(sLONG_PTR *pResult, PackagePtr pParams);
void SERIAL_OPEN_PATH(sLONG_PTR *pResult, PackagePtr pParams);
void SERIAL_CLOSE_PATH(sLONG_PTR *pResult, PackagePtr pParams);
void SERIAL_SEND_DATA(sLONG_PTR *pResult, PackagePtr pParams);

bool IsProcessOnExit();
void OnStartup();
void OnCloseProcess();

typedef PA_long32 process_number_t;
typedef PA_long32 process_stack_size_t;
typedef PA_long32 method_id_t;
typedef PA_Unichar* process_name_t;

void listenerLoop(void);

@interface ORSSerialPortHelper : NSObject <ORSSerialPortDelegate>

@property(atomic, copy) NSString *callbackMethodName;
@property(atomic, copy) NSString *callbackMethodContext;

@end

@interface ORSSerialPortObserver : NSObject
{
	NSMutableArray<NSData *>*data_array;
	NSMutableArray<NSString *>*method_array;
	NSMutableArray<NSString *>*context_array;
	NSMutableArray<NSString *>*path_array;
}

@property(readonly) process_stack_size_t stackSize;
@property(readonly) NSUInteger length;
@property(atomic, readwrite) process_number_t monitorProcessId;

- (void)start;

- (void)call4D;

- (void)appendData:(NSData *)data method:(NSString *)method context:(NSString *)context path:(NSString *)path;

#pragma mark NSNotification

- (void)serialPortsWereConnected:(NSNotification *)notification;
- (void)serialPortsWereDisconnected:(NSNotification *)notification;

@end
